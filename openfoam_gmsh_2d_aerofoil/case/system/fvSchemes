/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// // * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// ddtSchemes
// {
//     default         steadyState;
// }

// gradSchemes
// {
//     default         Gauss linear;
// }

// divSchemes
// {
//     default         none;
//     div(phi,U)      bounded Gauss linearUpwind grad(U);
//     div(phi,nuTilda) bounded Gauss linearUpwind grad(nuTilda);
//     div((nuEff*dev2(T(grad(U))))) Gauss linear;
//     div(phi,U)          bounded Gauss upwind;
//     div(phi,omega)    bounded Gauss upwind;
//     div(phi,k)          bounded Gauss upwind;
// }

// laplacianSchemes
// {
//     default         Gauss linear corrected;
// }

// interpolationSchemes
// {
//     default         linear;
// }

// snGradSchemes
// {
//     default         corrected;
// }

// wallDist
// {
//     method meshWave;
// }


// ************************************************************************* //
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         steadyState;
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
    default          none;

    div(phi,U)       bounded Gauss linearUpwind grad(U);

    turbulence       bounded Gauss upwind;
    div(phi,k)       $turbulence;
    div(phi,omega)   $turbulence;
    div(phi,nuTilda) $turbulence;
    div(phi,epsilon) $turbulence;
    div(phi,phit)    $turbulence;
    div(phi,f)       $turbulence;

    div((nuEff*dev2(T(grad(U))))) Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         corrected;
}

wallDist
{
    method          meshWave;
}


// ************************************************************************* //

